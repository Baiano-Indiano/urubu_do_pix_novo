plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new Exception("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.urubu_do_pix_novo"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion "27.0.12077973"
    
    // Configuração da toolchain do Kotlin
    kotlin {
        jvmToolchain(17)
    }
    
    defaultConfig {
        // Configuração de ABI removida para evitar conflito com splits
        
        // Habilita o core library desugaring
        multiDexEnabled true
    }
    
    // Configurações de compilação Java
    compileOptions {
        // Habilita o core library desugaring para APIs mais recentes
        coreLibraryDesugaringEnabled true
        
        // Define a compatibilidade do Java para a versão 17
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.urubu_do_pix_novo"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        
        // Habilitar multidex para evitar problemas com limite de métodos
        multiDexEnabled true
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
            
            // Otimizações para release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        
        debug {
            // Otimizações para desenvolvimento
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
    }

    // Configurações de compilação
    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xlint:unchecked'
        options.deprecation = true
        options.encoding = 'UTF-8'
    }

    // Configuração para evitar problemas de duplicação
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/*.kotlin_module'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.multidex:multidex:2.0.1'
    
    // Adiciona a dependência de desugaring
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
} 